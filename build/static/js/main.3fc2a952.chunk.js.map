{"version":3,"sources":["hooks/useStateWithLocalStorage.js","components/paper/paper.styles.js","components/paper/Paper.jsx","components/button/button.styles.js","components/button/Button.jsx","components/header/header.styles.js","layout/Container.jsx","layout/Item.jsx","components/header/Header.jsx","components/todoform/todoform.styles.js","components/todoform/TodoForm.jsx","components/todo/todo.styles.js","components/todo/Todo.jsx","components/todos/todos.styles.js","components/todos/Todos.jsx","pages/TodoList.jsx","App.js","index.js"],"names":["useStateWithLocalStorage","localStorageKey","_useState","useState","JSON","parse","localStorage","getItem","_useState2","Object","slicedToArray","todos","setTodos","Error","React","useEffect","setItem","stringify","propTypes","string","isRequired","paper","theme","css","_templateObject","background","color","primary","frame","_templateObject2","black","Paper","children","useTheme","core_browser_esm","styles","button","align","textColor","red","button_styles_templateObject","Button","text","onClick","defaultProps","headerTitle","header_styles_templateObject","Container","flexDirection","flexWrap","justifyContent","alignItems","alignContent","height","containerStyles","Container_templateObject","className","Item","flex","Item_templateObject","Header","showAddToggle","showAdd","clearTodos","layout_Container","layout_Item","button_Button","add","todoform_styles_templateObject","addForm","todoform_styles_templateObject2","addInput","_templateObject3","addBtn","_templateObject4","TodoForm","addTodo","value","setValue","onSubmit","e","preventDefault","length","alert","type","onChange","target","todo","todo_styles_templateObject","todoText","isCompleted","todo_styles_templateObject2","Todo","completeTodo","index","todoPlaceholder","todos_styles_templateObject2","addButtonPlaceholder","todos_styles_templateObject3","Todos","map","todo_Todo","key","TodoList","_useStateWithLocalSto","_useStateWithLocalSto2","setShowAdd","console","log","react_default","a","createElement","paper_Paper","header_Header","todoform_TodoForm","addedTodo","todos_Todos","App","emotion_theming_browser_esm","pages_TodoList","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fc2a952.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst useStateWithLocalStorage = localStorageKey => {\r\n  const [todos, setTodos] = useState(\r\n    JSON.parse(localStorage.getItem(localStorageKey)) || []\r\n  );\r\n\r\n  if (!localStorageKey) {\r\n    throw new Error(\"You have to passed in a localstorage key as an argument\");\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(todos));\r\n  }, [todos, localStorageKey]);\r\n\r\n  return [todos, setTodos];\r\n};\r\n\r\nuseStateWithLocalStorage.propTypes = {\r\n  localStorageKey: propTypes.string.isRequired\r\n};\r\n\r\nexport default useStateWithLocalStorage;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const paper = ({ theme }) => {\r\n  return css`\r\n    width: 600px;\r\n    height: 600px;\r\n    background-color: ${theme.background.color.primary};\r\n    border-radius: 4px;\r\n    padding: 30px;\r\n  `;\r\n};\r\n\r\nexport const frame = ({ theme }) => {\r\n  return css`\r\n    border: 1px solid ${theme.color.primary.black};\r\n    height: 100%;\r\n    /* \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start; */\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\n// import React from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\n// import styles from \"./paper.module.css\";\r\nimport * as styles from \"./paper.styles\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\nconst Paper = ({ children }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div css={styles.paper({ theme })}>\r\n      <div css={styles.frame({ theme })}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPaper.propTypes = {\r\n  children: propTypes.oneOfType([\r\n    propTypes.arrayOf(propTypes.node),\r\n    propTypes.node\r\n  ])\r\n};\r\n\r\nexport default Paper;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const button = ({ color, align, theme }) => {\r\n  let textColor;\r\n\r\n  const {\r\n    color: { primary }\r\n  } = theme;\r\n\r\n  switch (color) {\r\n    case \"black\":\r\n      textColor = primary.black;\r\n      break;\r\n\r\n    case \"red\":\r\n      textColor = primary.red;\r\n      break;\r\n\r\n    default:\r\n      textColor = primary.black;\r\n      break;\r\n  }\r\n\r\n  return css`\r\n    font-size: 1.8rem;\r\n    font-family: \"Ranchers\", cursive;\r\n    color: ${textColor};\r\n    text-align: ${align};\r\n    letter-spacing: 0.5rem;\r\n    padding: 16px;\r\n    background: unset;\r\n    border: unset;\r\n    outline: unset;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\nimport { jsx } from \"@emotion/core\";\r\n// import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\n// cara 2\r\n// import cx from \"classnames\";\r\n// import styles from \"./button.module.css\";\r\n\r\n// Cara 3\r\nimport * as styles from \"./button.styles\";\r\n\r\nconst Button = ({ text, onClick, color, align }) => {\r\n  // Cara 1\r\n  // const classNames = [\r\n  //   \"header-btn\",\r\n  //   color === \"black\" && \"main-black-color\",\r\n  //   color === \"red\" && \"main-red-color\",\r\n  //   align === \"left\" && \"align-left\",\r\n  //   align === \"right\" && \"align-right\"\r\n  // ].join(\" \");\r\n\r\n  // Cara 2\r\n  // const classNames = cx(styles.headerBtn, {\r\n  //   [styles.mainBlackColor]: color === \"black\",\r\n  //   [styles.mainRedColor]: color === \"red\",\r\n  //   [styles.alignLeft]: color === \"left\",\r\n  //   [styles.alignRight]: color === \"right\"\r\n  // });\r\n\r\n  // Cara 3\r\n  const theme = useTheme();\r\n  return (\r\n    // <button className={classNames} onClick={onClick}>\r\n    //   {text}\r\n    // </button>\r\n    <button css={styles.button({ align, color, theme })} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: \"Button\",\r\n  color: \"black\",\r\n  align: \"left\"\r\n};\r\n\r\nButton.propTypes = {\r\n  text: propTypes.string.isRequired,\r\n  onClick: propTypes.func,\r\n  color: propTypes.oneOf([\"black\", \"red\"]),\r\n  align: propTypes.oneOf([\"left\", \"right\"])\r\n};\r\n\r\nexport default Button;\r\n","import { css } from \"@emotion/core\";\r\n\r\n// export const header = () => {\r\n//   return css`\r\n//     display: flex;\r\n//     align-items: flex-start;\r\n//   `;\r\n// };\r\n\r\nexport const headerTitle = theme => {\r\n  return css`\r\n    text-align: center;\r\n    font-size: 3.6rem;\r\n    color: ${theme.color.primary.black};\r\n    font-family: \"Ranchers\", cursive;\r\n    font-weight: 700;\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\nimport { jsx, css } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Container = ({\r\n  children,\r\n  flexDirection,\r\n  flexWrap,\r\n  justifyContent,\r\n  alignItems,\r\n  alignContent,\r\n  height\r\n}) => {\r\n  const containerStyles = css`\r\n    display: flex;\r\n    flex-direction: ${flexDirection};\r\n    flex-wrap: ${flexWrap};\r\n    justify-content: ${justifyContent};\r\n    align-items: ${alignItems};\r\n    align-content: ${alignContent};\r\n    height: ${height};\r\n  `;\r\n  return (\r\n    <div className=\"flex-container\" css={containerStyles}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.defaultProps = {\r\n  flexDirection: \"row\",\r\n  flexWrap: \"nowrap\",\r\n  justifyContent: \"flex-start\",\r\n  alignItems: \"stretch\",\r\n  alignContent: \"stretch\",\r\n  height: \"auto\"\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: propTypes.oneOfType([\r\n    propTypes.arrayOf(propTypes.node),\r\n    propTypes.node\r\n  ]),\r\n  flexDirection: propTypes.oneOf([\r\n    \"row\",\r\n    \"row-reverse\",\r\n    \"column\",\r\n    \"column-reverse\"\r\n  ]),\r\n  flexWrap: propTypes.oneOf([\"nowrap\", \"wrap\", \"wrap-reverse\"]),\r\n  justifyContent: propTypes.oneOf([\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"space-between\",\r\n    \"space-around\",\r\n    \"space-evenly\",\r\n    \"start\",\r\n    \"end\",\r\n    \"left\",\r\n    \"right\"\r\n  ]),\r\n  alignItems: propTypes.oneOf([\r\n    \"stretch\",\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"baseline\",\r\n    \"first baseline\",\r\n    \"last baseline\",\r\n    \"start\",\r\n    \"end\",\r\n    \"slef-start\",\r\n    \"self-end\"\r\n  ]),\r\n  alignContent: propTypes.oneOf([\r\n    \"flex-start\",\r\n    \"flex-end\",\r\n    \"center\",\r\n    \"space-between\",\r\n    \"space-around\",\r\n    \"space-evenly\",\r\n    \"stretch\",\r\n    \"start\",\r\n    \"end\",\r\n    \"baseline\",\r\n    \"first baseline\",\r\n    \"last baseline\"\r\n  ]),\r\n  height: propTypes.oneOfType([propTypes.number, propTypes.string])\r\n};\r\n\r\nexport default Container;\r\n","/** @jsx jsx **/\r\nimport { jsx, css } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Item = ({ children, flex, align }) => {\r\n  return (\r\n    <div\r\n      className=\"flex-item\"\r\n      css={css`\r\n        flex: ${flex};\r\n        text-align: ${align};\r\n      `}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  children: propTypes.oneOfType([\r\n    propTypes.arrayOf(propTypes.node),\r\n    propTypes.node\r\n  ]),\r\n  flex: propTypes.oneOf([propTypes.number, propTypes.string]),\r\n  align: propTypes.oneOf([\"right\", \"left\", \"center\", \"justify\"])\r\n};\r\n\r\nexport default Item;\r\n","/** @jsx jsx **/\r\n// import React from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\nimport Button from \"../button/Button\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\n// import styles from \"./header.module.css\";\r\nimport * as styles from \"./header.styles\";\r\nimport Container from \"../../layout/Container\";\r\nimport Item from \"../../layout/Item\";\r\n\r\nconst Header = ({ showAddToggle, showAdd, clearTodos }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <section className=\"header-component\">\r\n      <Container alignItems=\"flex-start\">\r\n        <Item flex={1}>\r\n          <Button text={showAdd ? \"Finish\" : \"Add\"} onClick={showAddToggle} />\r\n        </Item>\r\n        <Item flex={2}>\r\n          <h1 css={styles.headerTitle(theme)}>Todo Lists</h1>\r\n        </Item>\r\n        <Item flex={1} align=\"right\">\r\n          <Button text=\"Clear\" onClick={clearTodos} color=\"red\" align=\"right\" />\r\n        </Item>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  showAddToggle: propTypes.func.isRequired,\r\n  showAdd: propTypes.bool.isRequired,\r\n  clearTodos: propTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const add = () => {\r\n  return css`\r\n    padding: 16px;\r\n  `;\r\n};\r\nexport const addForm = () => {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n  `;\r\n};\r\n\r\nexport const addInput = ({ theme }) => {\r\n  return css`\r\n    background: unset;\r\n    border: unset;\r\n    padding: 0 60px;\r\n    flex: 1;\r\n    border-bottom: 1px solid ${theme.color.primary.red};\r\n    outline: none;\r\n    font-size: 16px;\r\n    text-transform: lowercase;\r\n    font-family: \"Ranchers\", cursive;\r\n  `;\r\n};\r\n\r\nexport const addBtn = ({ theme }) => {\r\n  return css`\r\n    font-size: 1.8rem;\r\n    padding: 16px;\r\n    padding-right: none;\r\n    cursor: pointer;\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    text-transform: uppercase;\r\n    font-family: \"Ranchers\", cursive;\r\n    &:active {\r\n      text-shadow: 1px 1px 2px ${theme.color.primary.black};\r\n    }\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\nimport { jsx } from \"@emotion/core\";\r\n\r\nimport { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n// import styles from \"./todoform.module.css\";\r\n\r\nimport * as styles from \"./todoform.styles\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\nconst TodoForm = ({ addTodo, showAdd }) => {\r\n  // React Hooks value input\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  // Fungsi untuk menghandle btn dengan membawa value\r\n  const handleFormSubmit = e => {\r\n    // agar page tidak refresh\r\n    e.preventDefault();\r\n\r\n    // kondisi apabila input tidak ada isi\r\n    if (!value) {\r\n      alert(\"No Blank Todo!\");\r\n      return;\r\n    }\r\n\r\n    // kondisi apabila value melebihi 40kata\r\n    if (value.length > 40) {\r\n      alert(\"please create a shorter todo text!\");\r\n      setValue(\"\");\r\n      return;\r\n    }\r\n\r\n    addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  // Kondisi jika showadd adalah true maka muncul inputnya\r\n  if (showAdd) {\r\n    return (\r\n      <section css={styles.add}>\r\n        <form css={styles.addForm} onSubmit={handleFormSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            css={styles.addInput({ theme })}\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n          />\r\n          <button css={styles.addBtn({ theme })}>Add</button>\r\n        </form>\r\n      </section>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nTodoForm.propTypes = {\r\n  addTodo: propTypes.func.isRequired,\r\n  showAdd: propTypes.bool.isRequired\r\n};\r\n\r\nexport default TodoForm;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const todo = ({ theme }) => {\r\n  return css`\r\n    position: relative;\r\n\r\n    flex: 0 auto;\r\n    text-align: center;\r\n\r\n    min-height: 34px;\r\n    margin: 16px 0 0;\r\n    font-size: 24px;\r\n\r\n    border-bottom: 1px solid ${theme.color.primary.red};\r\n  `;\r\n};\r\n\r\nexport const todoText = ({ theme, isCompleted }) => {\r\n  return css`\r\n    width: 100%;\r\n    height: 50px;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    font-family: \"Ranchers\", cursive;\r\n    font-weight: normal;\r\n    text-decoration: ${isCompleted ? \"line-through\" : \"initial\"};\r\n    color: ${theme.color.primary.black};\r\n    cursor: pointer;\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\n// import React from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\n// import styles from \"./todo.module.css\";\r\n\r\nimport * as styles from \"./todo.styles\";\r\nimport { useTheme } from \"emotion-theming\";\r\n\r\nconst Todo = ({ text, completeTodo, index, isCompleted }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div css={styles.todo({ theme })} onClick={() => completeTodo(index)}>\r\n      <div css={styles.todoText({ theme, isCompleted })}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodo.propTypes = {\r\n  text: propTypes.string.isRequired,\r\n  completeTodo: propTypes.func.isRequired,\r\n  index: propTypes.number.isRequired,\r\n  isCompleted: propTypes.bool.isRequired\r\n};\r\n\r\nexport default Todo;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const todos = () => {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100px;\r\n  `;\r\n};\r\n\r\nexport const todoPlaceholder = () => {\r\n  return css`\r\n    font-family: \"Ranchers\", cursive;\r\n    font-size: 24px;\r\n    text-align: center;\r\n    padding: 16px;\r\n  `;\r\n};\r\n\r\nexport const addButtonPlaceholder = () => {\r\n  return css`\r\n    font-family: \"Ranchers\", cursive;\r\n    font-size: 35px;\r\n  `;\r\n};\r\n","/** @jsx jsx **/\r\n// import React from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport propTypes from \"prop-types\";\r\nimport Todo from \"../todo/Todo\";\r\n// import styles from \"./todos.module.css\";\r\nimport * as styles from \"./todos.styles\";\r\n\r\nimport Container from \"../../layout/Container\";\r\nimport Item from \"../../layout/Item\";\r\n\r\nconst Todos = ({ todos, completeTodo }) => {\r\n  return (\r\n    // kondisi apabila tidak ada isi todo akan muncul placeholder\r\n    <section className=\"todos-component\">\r\n      <Container flexDirection=\"column\">\r\n        {todos.length > 0 &&\r\n          todos.map((todo, index) => {\r\n            return (\r\n              <Todo\r\n                key={index}\r\n                text={todo.text}\r\n                isCompleted={todo.isCompleted}\r\n                completeTodo={completeTodo}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n        {todos.length === 0 && (\r\n          <div css={styles.todoPlaceholder}>\r\n            Add todo by clicking{\" \"}\r\n            <span css={styles.addButtonPlaceholder}>ADD</span> button <br /> on\r\n            the top left corner\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nTodos.propTypes = {\r\n  todos: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      text: propTypes.string\r\n    })\r\n  ),\r\n  completeTodo: propTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useState } from \"react\";\r\nimport useStateWithLocalStorage from \"../hooks/useStateWithLocalStorage\";\r\nimport Paper from \"../components/paper/Paper\";\r\nimport Header from \"../components/header/Header\";\r\nimport TodoForm from \"../components/todoform/TodoForm\";\r\nimport Todos from \"../components/todos/Todos\";\r\n\r\nimport Container from \"../layout/Container\";\r\n\r\nconst TodoList = () => {\r\n  // React Hooks untuk isi Todo\r\n  // const [todos, setTodos] = useState([\r\n  //   { text: \"Learning React\", isCompleted: false },\r\n  //   { text: \"Learning React Hooks\", isCompleted: false },\r\n  //   { text: \"Learning styling in React\", isCompleted: false }\r\n  // ]);\r\n\r\n  // React hooks yang memiliki logika jika didalam localstorage ada key \"todos\" maka ambil datanya tapi jika tidak ada buat array kosong\r\n  // const [todos, setTodos] = useState(\r\n  //   JSON.parse(localStorage.getItem(\"todos\")) || []\r\n  // );\r\n\r\n  const [todos, setTodos] = useStateWithLocalStorage(\"todos\");\r\n\r\n  // React Hooks untuk btn dari todoForm\r\n  const [showAdd, setShowAdd] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  // }, [todos]);\r\n\r\n  // Fungsi untuk menambahkan todo\r\n  const addTodo = value => {\r\n    // Kondisi limit todo\r\n    if (todos.length < 7) {\r\n      const addedTodo = [...todos, { text: value, isCompleted: false }];\r\n\r\n      setTodos(addedTodo);\r\n    } else {\r\n      alert(\"Only 7 todos is allowed!\");\r\n    }\r\n  };\r\n\r\n  // Fungsi jika todo sudah dikerjakan pada todo\r\n  const completeTodo = index => {\r\n    const addedTodo = [...todos];\r\n    // Mengklik todo yang sesuai dengan nomor indexnya\r\n    addedTodo[index].isCompleted = !addedTodo[index].isCompleted;\r\n\r\n    setTodos(addedTodo);\r\n  };\r\n\r\n  // Fungsi untuk menghapus semua todo\r\n  const clearTodos = () => !showAdd && setTodos([]);\r\n\r\n  // fungsi untuk melakukan perubahan pada btn todoForm\r\n  const showAddToggle = () => setShowAdd(!showAdd);\r\n\r\n  console.log(todos);\r\n\r\n  return (\r\n    <Paper>\r\n      <Container flexDirection=\"column\" height=\"100%\">\r\n        <Header\r\n          showAddToggle={showAddToggle}\r\n          showAdd={showAdd}\r\n          clearTodos={clearTodos}\r\n        />\r\n        <TodoForm addTodo={addTodo} showAdd={showAdd} />\r\n        <Todos todos={todos} completeTodo={completeTodo} />\r\n      </Container>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { ThemeProvider } from \"emotion-theming\";\r\n\r\nimport TodoList from \"./pages/TodoList\";\r\n\r\nconst theme = {\r\n  color: {\r\n    primary: {\r\n      black: \"#484848\",\r\n      red: \"#e06262\"\r\n    }\r\n  },\r\n  background: {\r\n    color: {\r\n      primary: \"#b4d7ff\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <TodoList />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}